.prose {
    --prose-color: var(--color-neutral-700);
    --prose-heading-color: var(--color-neutral-950);
    --prose-strong-color: var(--color-neutral-950);
    --prose-link-color: var(--color-link);
    --prose-code-color: var(--color-neutral-950);
    --prose-marker-color: color-mix( in oklab, var(--color-neutral-700) 25%, transparent);
    --prose-link-underline-color: var(--color-link);
    --prose-th-borders: var(--color-neutral-300);
    --prose-td-borders: var(--color-neutral-200);
    --prose-hr-color: color-mix( in oklab, var(--color-neutral-950) 5%, transparent);
    --prose-blockquote-border-color: var(--color-neutral-300);
    /* Dark mode colors from the first file */
    &:where(.dark, .dark *) {
        --prose-color: var(--color-neutral-300);
        --prose-heading-color: var(--color-white);
        --prose-strong-color: var(--color-white);
        --prose-link-color: var(--color-dark-link);
        --prose-code-color: var(--color-white);
        --prose-marker-color: color-mix( in oklab, var(--color-neutral-300) 35%, transparent);
        --prose-link-underline-color: var(--color-dark-link);
        --prose-th-borders: var(--color-neutral-600);
        --prose-td-borders: var(--color-neutral-700);
        --prose-hr-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        --prose-blockquote-border-color: var(--color-neutral-600);
    }
    /* System dark mode colors from the first file */
    @media (prefers-color-scheme: dark) {
        &:where(.system, .system *) {
            --prose-color: var(--color-neutral-300);
            --prose-heading-color: var(--color-white);
            --prose-strong-color: var(--color-white);
            --prose-link-color: var(--color-white);
            --prose-code-color: var(--color-white);
            --prose-marker-color: color-mix( in oklab, var(--color-neutral-300) 35%, transparent);
            --prose-link-underline-color: var(--color-blue-400);
            --prose-th-borders: var(--color-neutral-600);
            --prose-td-borders: var(--color-neutral-700);
            --prose-hr-color: color-mix( in oklab, var(--color-white) 10%, transparent);
            --prose-blockquote-border-color: var(--color-neutral-600);
        }
    }
    color: var(--prose-color);
    max-width: 80ch;
    /*yclee 65*/
    font-size: 1rem;
    line-height: 2;
     :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
    }
     :where([class~="lead"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--tw-prose-lead);
        font-size: 1.25em;
        line-height: 1.6;
        margin-top: 1.2em;
        margin-bottom: 1.2em;
    }
     :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-link-color);
        text-decoration: underline;
        font-weight: 500;
    }
     :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-strong-color);
        font-weight: 600;
    }
     :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(blockquote strong):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(thead th strong):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: decimal;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
    }
     :where(ol[type="A"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: upper-alpha;
    }
     :where(ol[type="a"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: lower-alpha;
    }
     :where(ol[type="A" s]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: upper-alpha;
    }
     :where(ol[type="a" s]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: lower-alpha;
    }
     :where(ol[type="I"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: upper-roman;
    }
     :where(ol[type="i"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: lower-roman;
    }
     :where(ol[type="I" s]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: upper-roman;
    }
     :where(ol[type="i" s]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: lower-roman;
    }
     :where(ol[type="1"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: decimal;
    }
     :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        list-style-type: disc;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
    }
     :where(ol > li):not( :where([class~="not-prose"], [class~="not-prose"] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
    }
     :where(ul > li):not( :where([class~="not-prose"], [class~="not-prose"] *))::marker {
        color: var(--tw-prose-bullets);
    }
     :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.25em;
    }
     :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        border-color: var(--prose-hr-color);
        border-top-width: 1;
        margin-top: 3em;
        margin-bottom: 3em;
    }
     :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--prose-blockquote-border-color);
        quotes: "\201C" "\201D" "\2018" "\2019";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
    }
     :where(blockquote p:first-of-type):not( :where([class~="not-prose"], [class~="not-prose"] *))::before {
        content: open-quote;
    }
     :where(blockquote p:last-of-type):not( :where([class~="not-prose"], [class~="not-prose"] *))::after {
        content: close-quote;
    }
     :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-heading-color);
        font-weight: 800;
        font-size: 2.25em;
        margin-top: 0;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
    }
     :where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-weight: 900;
        color: inherit;
    }
     :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-heading-color);
        font-weight: 700;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 1em;
        line-height: 1.3333333;
    }
     :where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-weight: 800;
        color: inherit;
    }
     :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-heading-color);
        font-weight: 600;
        font-size: 1.25em;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
    }
     :where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
    }
     :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-heading-color);
        font-weight: 600;
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        line-height: 1.5;
    }
     :where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
    }
     :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }
     :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        display: block;
        margin-top: 2em;
        margin-bottom: 2em;
    }
     :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }
     :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-weight: 500;
        font-family: inherit;
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
        font-size: 0.875em;
        border-radius: 0.3125rem;
        padding-top: 0.1875em;
        padding-inline-end: 0.375em;
        padding-bottom: 0.1875em;
        padding-inline-start: 0.375em;
    }
     :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-code-color);
        font-weight: 600;
        font-size: 0.875em;
    }
     :where(code):not( :where([class~="not-prose"], [class~="not-prose"] *))::before {
        content: "`";
    }
     :where(code):not( :where([class~="not-prose"], [class~="not-prose"] *))::after {
        content: "`";
    }
     :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.875em;
    }
     :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.9em;
    }
     :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(blockquote code):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(thead th code):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        color: inherit;
    }
     :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        overflow-x: auto;
        font-weight: 400;
        font-size: 0.875em;
        line-height: 1.7142857;
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0.375rem;
        padding-top: 0.8571429em;
        padding-inline-end: 1.1428571em;
        padding-bottom: 0.8571429em;
        padding-inline-start: 1.1428571em;
    }
     :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
    }
     :where(pre code):not( :where([class~="not-prose"], [class~="not-prose"] *))::before {
        content: none;
    }
     :where(pre code):not( :where([class~="not-prose"], [class~="not-prose"] *))::after {
        content: none;
    }
     :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        width: 100%;
        table-layout: auto;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 0.875em;
        line-height: 1.7142857;
    }
     :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--prose-th-borders);
    }
     :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--prose-heading-color);
        font-weight: 600;
        vertical-align: bottom;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
    }
     :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--prose-td-borders);
    }
     :where(tbody tr:last-child):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        border-bottom-width: 0;
    }
     :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        vertical-align: baseline;
    }
     :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        border-top-width: 1px;
        border-top-color: var(--prose-th-borders);
    }
     :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        vertical-align: top;
    }
     :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        text-align: start;
    }
     :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
    }
     :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.875em;
        line-height: 1.4285714;
        margin-top: 0.8571429em;
    }
     :first-child:where(:not(.not-prose, .not-prose *)) {
        margin-top: 0;
    }
     :last-child:where(:not(.not-prose, .not-prose *)) {
        margin-bottom: 0;
    }
}

.prose-lg {
    font-size: 1.125rem;
    line-height: 1.7777778;
     :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
    }
     :where([class~="lead"]):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 1.2222222em;
        line-height: 1.4545455;
        margin-top: 1.0909091em;
        margin-bottom: 1.0909091em;
    }
     :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.6666667em;
        margin-bottom: 1.6666667em;
        padding-inline-start: 1em;
    }
     :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 2.6666667em;
        margin-top: 0;
        margin-bottom: 0.8333333em;
        line-height: 1;
    }
     :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 1.6666667em;
        margin-top: 1.8666667em;
        margin-bottom: 1.0666667em;
        line-height: 1.3333333;
    }
     :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 1.3333333em;
        margin-top: 1.6666667em;
        margin-bottom: 0.6666667em;
        line-height: 1.5;
    }
     :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 0.4444444em;
        line-height: 1.5555556;
    }
     :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
    }
     :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
    }
     :where(picture > img):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
    }
     :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
    }
     :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 0.8888889em;
        border-radius: 0.3125rem;
        padding-top: 0.2222222em;
        padding-inline-end: 0.4444444em;
        padding-bottom: 0.2222222em;
        padding-inline-start: 0.4444444em;
    }
     :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 0.8888889em;
    }
     :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 0.8666667em;
    }
     :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 0.875em;
    }
     :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.75;
        margin-top: 2em;
        margin-bottom: 2em;
        border-radius: 0.375rem;
        padding-top: 1em;
        padding-inline-end: 1.5em;
        padding-bottom: 1em;
        padding-inline-start: 1.5em;
    }
     :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
    }
     :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
    }
     :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        margin-bottom: 0.6666667em;
    }
     :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
    }
     :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
    }
     :where(.prose-lg > ul > li p):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
    }
     :where(.prose-lg > ul > li > p:first-child):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-top: 1.3333333em;
    }
     :where(.prose-lg > ul > li > p:last-child):not( :where([class~="not-prose"], [class~="not-prose"] *)) {
        margin-bottom: 1.333333;
    }
}