import{g as o}from"./index.DKtf60Sy.js";class g{constructor(i){this.grid=i,this.projects=this.grid.children,this.projects.length!==0&&(this.tooltip=document.querySelector(".tooltip"),this.arrow=this.tooltip.querySelector(".tooltip__row--ra svg"),this.OFFSET_X=20,this.OFFSET_Y=0,this.animationConfig={texts:{duration:.7,ease:"expo"},tooltip:{duration:.6,ease:"power4.inOut"},textsDelay:.4,hideDelay:"-=0.7"},this.rowAnimationDirections={subTitle:{in:{yPercent:-100},out:{yPercent:-100}},title:{in:{yPercent:100},out:{yPercent:100}},arrow:{in:{yPercent:-100},out:{yPercent:-100}}},this.hoverTarget=null,this.isTooltipVisible=!1,this.scaleDownTimeout,this.scaleDownTimeline,this.mouseLeaveTimeout,this.rowTimelines={},this.arrowTimeline=null,this.windowWidth=window.innerWidth,this.xTo=o.quickTo(this.tooltip,"x",{duration:.6,ease:"expo"}),this.yTo=o.quickTo(this.tooltip,"y",{duration:.6,ease:"expo"}),this.tooltip.querySelectorAll(".tooltip__row").forEach(e=>e.dataset.active="0"),this.initializeEvents())}initializeEvents(){this.grid.addEventListener("mousemove",this.handleMouseMove),window.addEventListener("resize",this.handleResize),[...this.projects].forEach(i=>{i.addEventListener("mouseenter",this.handleMouseEnter),i.addEventListener("mouseleave",this.handleMouseLeave)})}handleMouseMove=i=>{if(!this.hoverTarget)return;const e=this.tooltip.offsetWidth;let t;const s=i.clientY+this.OFFSET_Y+window.scrollY;i.clientX+this.OFFSET_X+e>this.windowWidth?t=i.clientX-this.OFFSET_X-e+window.scrollX:t=i.clientX+this.OFFSET_X+window.scrollX,this.isTooltipVisible?(this.xTo(t),this.yTo(s)):(this.scaleDownTimeline&&this.scaleDownTimeline.kill(),clearTimeout(this.scaleDownTimeout),o.set(this.tooltip,{x:t,y:s}),o.fromTo(this.tooltip,{scale:0,opacity:1,transformOrigin:"0% 100%"},{...this.animationConfig.tooltip,scale:1}),this.isTooltipVisible=!0),clearTimeout(this.scaleDownTimeout),this.scaleDownTimeout=setTimeout(()=>{this.hoverTarget||(this.scaleDownTimeline=o.timeline(),this.updateTooltip({subTitle:"",title:""},this.scaleDownTimeline,"out"),this.scaleDownTimeline.to(this.tooltip,{...this.animationConfig.tooltip,scale:0},this.animationConfig.hideDelay),this.isTooltipVisible=!1)},50)};handleMouseEnter=i=>{clearTimeout(this.mouseLeaveTimeout),this.hoverTarget=i.currentTarget,this.scaleDownTimeline&&this.scaleDownTimeline.kill(),clearTimeout(this.scaleDownTimeout);const e=this.hoverTarget.dataset.subtitle,t=this.hoverTarget.dataset.title;console.log(this.hoverTarget.dataset);const s=o.timeline();this.updateTooltip({subTitle:e,title:t},s,this.isTooltipVisible?"none":"in")};handleMouseLeave=()=>{this.hoverTarget=null,this.mouseLeaveTimeout=setTimeout(()=>{!this.hoverTarget&&this.isTooltipVisible&&(o.set(this.tooltip,{scale:0,opacity:0}),this.isTooltipVisible=!1)},50)};handleResize=()=>{this.windowWidth=window.innerWidth};initializeEvents(){this.grid.addEventListener("mousemove",this.handleMouseMove),window.addEventListener("resize",this.handleResize),[...this.projects].forEach(i=>{i.addEventListener("mouseenter",this.handleMouseEnter),i.addEventListener("mouseleave",this.handleMouseLeave)})}destroy(){this.arrowTimeline&&this.arrowTimeline.kill(),this.scaleDownTimeline&&this.scaleDownTimeline.kill(),Object.values(this.rowTimelines).forEach(i=>i&&i.kill()),clearTimeout(this.scaleDownTimeout),clearTimeout(this.mouseLeaveTimeout),this.grid.removeEventListener("mousemove",this.handleMouseMove),window.removeEventListener("resize",this.handleResize),[...this.projects].forEach(i=>{i.removeEventListener("mouseenter",this.handleMouseEnter),i.removeEventListener("mouseleave",this.handleMouseLeave)})}updateTooltip(i,e,t){Object.entries(i).forEach(([s,a])=>{const l=`[data-field="${s}"]`;this.updateTextSlider(l,a,e,t)}),(t==="in"&&!this.isTooltipVisible||t==="out"&&this.isTooltipVisible)&&this.animateArrow(e,t)}updateTextSlider(i,e,t,s){const a=this.tooltip.querySelector(i),l=a.querySelectorAll(".oh__inner");if(l.length<2)return;const c=a.dataset.active==="0"?0:1,u=c===0?1:0,r=l[c],n=l[u],T=i.replace('[data-field="',"").replace('"]',""),w=this.rowAnimationDirections[T]||this.rowAnimationDirections.title,m={...w.out},d={...w.in};if(this.rowTimelines[i]&&s!=="out"&&this.rowTimelines[i].kill(),this.rowTimelines[i]=o.timeline(),s==="in")o.set(r,m),o.set(n,d),this.rowTimelines[i].to(r,{...this.animationConfig.texts,...m},this.animationConfig.textsDelay),o.set(n,d),this.rowTimelines[i].to(n,{...this.animationConfig.texts,yPercent:0,onStart:()=>{n.textContent=e}},this.animationConfig.textsDelay);else if(s==="none"){const v={subTitle:{yPercent:100},title:{yPercent:-100}}[T]||{yPercent:0};this.rowTimelines[i].to(r,{...this.animationConfig.texts,...v},0),o.set(n,d),this.rowTimelines[i].to(n,{...this.animationConfig.texts,yPercent:0,onStart:()=>{n.textContent=e}},0)}else s==="out"&&this.rowTimelines[i].to(r,{...m,...this.animationConfig.texts},0);a.dataset.active=u.toString(),t.add(this.rowTimelines[i],0)}animateArrow(i,e="none"){if(!this.arrow)return;this.arrowTimeline&&this.arrowTimeline.kill(),this.arrowTimeline=o.timeline();const t=this.rowAnimationDirections.arrow;e==="in"?this.arrowTimeline.fromTo(this.arrow,{...t.in},{...this.animationConfig.texts,yPercent:0},this.animationConfig.textsDelay):e==="out"&&this.arrowTimeline.to(this.arrow,{...this.animationConfig.texts,...t.out},0),i.add(this.arrowTimeline,0)}}let p;const f=h=>{document.documentElement.getAttribute("data-page")==="home"&&(h==="load"?p=new g(document.querySelector("[data-grid]")):h==="before-swap"&&p.destroy())};document.addEventListener("astro:page-load",()=>f("load"));document.addEventListener("astro:before-swap",()=>f("before-swap"));
